#!/usr/bin/env bash

# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    run_tests                                          :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: ffloris <ffloris@student.42.fr>            +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2018/04/13 09:39:19 by ffloris           #+#    #+#              #
#    Updated: 2019/02/21 20:16:29 by ffloris          ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# Exits status
EXIT_ERROR_STATUS=1
EXIT_STATUS=0

# Colors
RED=$(tput setaf 1)
WHITE=$(tput setaf 7)
GREEN=$(tput setaf 2)

#Text styles
BOLD_TEXT=$(tput bold)
NORMAL_TEXT=$(tput sgr0)

TEST_MAIN="malloc_test"

# Inject dynamic lib on macOS
export DYLD_INSERT_LIBRARIES="../libft_malloc.so"
export DYLD_FORCE_FLAT_NAMESPACE="1"
export DYLD_LIBRARY_PATH="../"

# Inject dynamic lib on Linux
export LD_PRELOAD="../libft_malloc.so"

# Run unit testing
printf "\n${BOLD_TEXT}Run unit testing:${NORMAL_TEXT}\n"
if ! ./$TEST_MAIN; then
	EXIT_STATUS=$EXIT_ERROR_STATUS
fi

# If unit testing was successful, test malloc with some commands
printf "\n${BOLD_TEXT}Testing commands:${NORMAL_TEXT}\n"

commands=(
	"ls"
	"ls -lRh"
	"ls -l /"
	"find ."
)
for command in "${commands[@]}"; do
	${command} 2>&1 > /dev/null
	if [ $? -eq 0 ]; then
		RESULT="${GREEN}OK${WHITE}"
	else
		RESULT="${RED}KO${WHITE}"
		EXIT_STATUS=$EXIT_ERROR_STATUS
	fi
	printf "  - Testing with ${BOLD_TEXT}${command}${NORMAL_TEXT} ${RESULT}\n"
done

printf "\n"

exit $EXIT_STATUS
